name: Build and Publish Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  check-version:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: olegtarasov/get-tag@v2
        id: tag-name
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1

      - id: package-version
        run: |
          sudo npm i -g json
          PACKAGE_VERSION=$(json version -f package.json)
          echo $PACKAGE_VERSION
          echo "::set-output name=package_version::$PACKAGE_VERSION"

      - name: Fail on version missmatch
        run: exit 1
        if: ${{ steps.package-version.outputs.package_version != steps.tag-name.outputs.tag }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true


  build:
    needs: check-version
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        node-version: [12.x, 13.x, 14.x]
    env:
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.node-version }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: npm test

      - run: |
          sudo npm install -g neon-cli
          neon build --release

      - id: gen-package
        run: |
          sudo npm install -g node-pre-gyp@amilajack/node-pre-gyp#neon-compat
          node-pre-gyp package

#      - name: Upload release
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: "build/stage/${{ version }}/node-${{ }}"
#          asset_name: ${{ steps.pack-deb.outputs.package_name }}
#          asset_content_type: application/gzip

      - name: Flush the disk cache for macOS
        if: matrix.os == 'macos-latest'
        run: sudo /usr/sbin/purge
