name: publish

on:
  release:
    types:
      - created

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Lint with rustfmt
        working-directory: native
        run: |
          cargo fmt

      - name: Lint with rustfmt
        working-directory: native
        run: |
          cargo clippy --all-targets --all-features

  build_and_upload_artifacts:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        node-version: [12, 14, 16]
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - run: npm install cargo-cp-artifact --global
      - run: npm install node-pre-gyp --global
      - run: npm run build
      - run: npm run package

#      - name: Upload release deb
#        uses: actions/upload-release-asset@v1.0.2
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        with:
#          upload_url: ${{ github.event.release.upload_url }}
#          asset_path: /${{ steps.pack-deb.outputs.deb_path }}
#          asset_name: ${{ steps.pack-deb.outputs.deb_file }}
#          asset_content_type: application/octet-stream
#      - run: |
#          set -x
#          assets=()
#          for asset in build/stage/${{ github.event.release.tag_name }}; do
#            assets+=("-a" "$asset")
#          done
#          tag_name="${GITHUB_REF##*/}"
#          hub release create "${assets[@]}" -m "$tag_name" "$tag_name"
#        env:
#          GITHUB_TOKEN: ${{ secrets.PAT }}
#        build/stage/v0.0.1-alpha.1/node-v93-darwin-x64.tar.gz

  publish-to-npm-with-artifacts:
    runs-on: ubuntu-latest
    needs: [build_and_upload_artifacts]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

#      - run: npm install cargo-cp-artifact --global
#      - run: npm install node-pre-gyp --global
#      - run: npm run build

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}
        run: npm publish --access public

