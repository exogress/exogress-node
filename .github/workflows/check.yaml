name: publish

on:
  release:
    types:
      - created

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - uses: actions/setup-node@v2

      - run: node ci/ci.js check_version ${{ github.event.release.tag_name }}

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - uses: Swatinem/rust-cache@v1

      - name: Lint with rustfmt
        working-directory: native
        run: |
          cargo fmt

      - name: Lint with rustfmt
        working-directory: native
        run: |
          cargo clippy --all-targets --all-features

  build_and_upload_artifacts:
    runs-on: ${{ matrix.os }}
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        node-version: [12, 14, 16]
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install latest rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - uses: Swatinem/rust-cache@v1

      - run: npm run build
      - run: npm install node-pre-gyp --global
      - uses: JesseTG/rm@v1.0.2
        with:
          path: native/target
      - name: build-package
        run: npm run package

      - name: extract-package-path
        run: |
          OUTPUT_PATH=$(node ci/ci.js asset_path)
          echo "::set-output name=pre-package-path::$OUTPUT_PATH"

      - name: extract-filename
        run: |
          ASSET_NAME='node ci/ci.js asset_name'
          echo "::set-output name=asset-name::$ASSET_NAME"

      - name: Upload release deb
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.extract-package-path.outputs.pre-package-path }}
          asset_name: ${{ steps.extract-filename.outputs.asset-name }}
          asset_content_type: application/octet-stream

  publish-to-npm-with-artifacts:
    runs-on: ubuntu-latest
    needs: [build_and_upload_artifacts]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

#      - run: npm install cargo-cp-artifact --global
#      - run: npm install node-pre-gyp --global
#      - run: npm run build

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH }}
        run: npm publish --access public

